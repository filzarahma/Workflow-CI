name: CI for Modelling Workflow

on:
  push:
    branches: main
  pull_request:
    branches: main

env:
  CSV_URL: "MLproject/heart_preprocessing.csv"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.13'

    - name: Display CSV URL
      run: echo "CSV_URL=${CSV_URL}"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mlflow pandas scikit-learn

    - name: Run MLflow project
      run: |
        mlflow run MLproject --env-manager=local

    - name: Get latest MLflow run_id from directory
      id: get_run_id
      run: |
        RUN_ID=$(ls -t mlruns/0 | head -n 1)
        echo "Found latest run_id: $RUN_ID"
        echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT

    - name: Show latest MLflow run_id
      run: echo "Latest run_id is ${{ steps.get_run_id.outputs.run_id }}"

    - name: Set up Git LFS
      run: |
        git config --global user.name "${{ secrets.USERNAME }}"
        git config --global user.email "${{ secrets.EMAIL }}"
        git lfs install
        git lfs track "mlruns/**"
        git add .gitattributes
        git commit -m "Track large files in mlruns with Git LFS" || true
        git push origin main

    - name: Save mlruns directory to GitHub
      run: |
        git config --global user.name "${{ secrets.USERNAME }}"
        git config --global user.email "${{ secrets.EMAIL }}"
        git add mlruns/
        git commit -m "Save MLflow runs" || true
        git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }} HEAD:main


    # - name: Build Docker model
    #   run: |
    #     mlflow models build-docker \
    #       --model-uri ./mlruns/0/${{ steps.get_run_id.outputs.run_id }}/artifacts/model \
    #       --name heart_disease

    # - name: Log in to Docker Hub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    # - name: Tag Docker Image
    #   run: |
    #     docker tag heart_disease ${{ secrets.DOCKERHUB_USERNAME }}/heart-disease-model:latest

    # - name: Push Docker Image
    #   run: |
    #     docker push ${{ secrets.DOCKERHUB_USERNAME }}/heart-disease-model:latest


