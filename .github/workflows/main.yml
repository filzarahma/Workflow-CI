name: CI for Modelling Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CSV_URL: "MLproject/heart_preprocessing.csv"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.13'

    - name: Display CSV URL
      run: echo "CSV_URL=${CSV_URL}"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mlflow pandas scikit-learn

    - name: Run MLflow project
      run: |
        mlflow run MLproject --env-manager=local

    - name: Set up Git LFS
      run: |
        git config --global user.name "${{ secrets.USERNAME }}"
        git config --global user.email "${{ secrets.EMAIL }}"
        git lfs install
        git lfs track "mlruns/**"
        git add .gitattributes
        git commit -m "Track large files in mlruns with Git LFS" || true
        git push origin main

    - name: Save mlruns directory to GitHub
      run: |
        git config --global user.name "${{ secrets.USERNAME }}"
        git config --global user.email "${{ secrets.EMAIL }}"
        git add mlruns/
        git commit -m "Save MLflow runs" || true
        git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }} HEAD:main

    - name: Validate MLflow output
      run: |
        if [ ! -d "mlruns/0" ]; then
          echo "ERROR: mlruns/0/ not found. MLflow run might have failed."
          exit 1
        fi

        RUN_COUNT=$(ls -1q mlruns/0 | wc -l)
        if [ "$RUN_COUNT" -eq "0" ]; then
          echo "ERROR: No runs found in mlruns/0/"
          exit 1
        fi

    - name: Get latest MLflow run_id from directory
      id: get_run_id
      run: |
        if [ -d "mlruns/0" ] && [ "$(ls -A mlruns/0)" ]; then
          RUN_ID=$(ls -td mlruns/0/*/ | head -n 1 | awk -F'/' '{print $(NF-1)}')
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT
          echo "Latest run_id: $RUN_ID"
        else
          echo "No runs found in mlruns/0/"
          echo "run_id=" >> $GITHUB_OUTPUT
        fi

    - name: Build Docker model
      run: |
        mlflow models build-docker \
          --model-uri "runs:/$RUN_ID/model" \
          --name "heart_disease"

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Tag Docker Image
      run: |
        docker tag heart_disease ${{ secrets.DOCKERHUB_USERNAME }}/heart-disease:latest

    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/heart-disease:latest
